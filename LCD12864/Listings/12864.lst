C51 COMPILER V9.60.7.0   12864                                                             04/25/2024 20:19:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\Objects\12864.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\128
                    -64.lst) TABS(2) OBJECT(.\Objects\12864.obj)

line level    source

   1          #include "12864.h"
   2          
   3          ///////////////////////////////////////////////////////////////////////
   4          void delayms(uint i)
   5          {
   6   1        uchar j;
   7   1        while(i--)
   8   1            for(j=10;j>0;j--);
   9   1      }
  10          /////////////////////////////////////////////////////////////////////
  11          void read_busy()
  12          {
  13   1          uchar busy;
  14   1          P0 = 0x00;
  15   1          RS = 0;
  16   1          RW = 1;
  17   1          do
  18   1          {
  19   2              E = 1;
  20   2              delayms(2);
  21   2              busy = P0;
  22   2              E = 0;
  23   2             
  24   2              
  25   2          }while(busy & 0x80);
  26   1      }
  27          ////////////////////////////////////////////////////////////////////////////////////////
  28           void write_cmd(uchar cmd)   //向lcd写一命令
  29          {
  30   1        read_busy();             //查忙
  31   1        RS=0;              //命令/数据选择,为0时选择命令 
  32   1        RW=0;              //读/写选择，为0时选择写
  33   1        E=0;
  34   1      //  _nop_();
  35   1      //    _nop_(); 
  36   1        delayms(20);  
  37   1        P0=cmd;        //送入命令
  38   1        delayms(1);       //等待
  39   1        E=1;              
  40   1        delayms(1);
  41   1        E=0;
  42   1      }
  43          //////////////////////////////////////////////////////////////////////////////////////////
  44          void write_dat(uchar dat)   //向LCD写一数据
  45          {
  46   1        read_busy(); 
  47   1        RS=1;            //H为数据
  48   1        RW=0;
  49   1        E=0;
  50   1        P0=dat;
  51   1        delayms(1);
  52   1        E=1;
  53   1        delayms(1);
  54   1        E=0;
C51 COMPILER V9.60.7.0   12864                                                             04/25/2024 20:19:34 PAGE 2   

  55   1      }
  56          //////////////////////////////////////////////////////////////////////////////
  57          void initlcd()    //LCD初始化
  58          {
  59   1        //PSB=1;     //设置为8BIT并口工作模式  H并行 L串行
  60   1        delayms(5);
  61   1        write_cmd(0x34);
  62   1        delayms(2);
  63   1        write_cmd(0x30);  //选择扩充指令集
  64   1        delayms(2);
  65   1        write_cmd(0x0c);  //开显示，无游标
  66   1        delayms(2);
  67   1        write_cmd(0x01);  //清除显示，并且设定地址指针为00H
  68   1        delayms(2);
  69   1        write_cmd(0x06);  //指定在资料的读取及写入时，设定游标的移动方向及指定显示的移位
  70   1      }
  71          ////////////////////////////////////////////////////////////////////////////////////////////
  72          void dis(uchar x,uchar y,uchar code *s)  //任意位置显示字符串
  73          {                     //x为横坐标，y位纵坐标，*s表示指针，为数据的首地址
  74   1        switch(x)               //选择纵坐标
  75   1        {
  76   2          case 0:write_cmd(0x80+y);break;  //第一行
  77   2          case 1:write_cmd(0x90+y);break;  //第二行
  78   2          case 2:write_cmd(0x88+y);break;  //第三行
  79   2          case 3:write_cmd(0x98+y);break;  //第四行
  80   2          case 4:write_cmd(0xa0+y);break;  //第五行 2
  81   2          case 5:write_cmd(0xb0+y);break;  //第六行 3
  82   2          case 6:write_cmd(0xa8+y);break;  //第七行 0
  83   2          case 7:write_cmd(0xb8+y);break;  //第八行 1
  84   2          default:break;
  85   2        }
  86   1        while(*s>0)                    //写入数据，直到数据为空
  87   1        {
  88   2          write_dat(*s);                   //写数据
  89   2          delayms(10);                  //下一字符
  90   2          s++;
  91   2        }
  92   1      }
  93          
  94          
  95          void gun_xia()
  96          {
  97   1       uchar i;
  98   1       for (i=63;i>0;i--)
  99   1       { 
 100   2        write_cmd(0x40+i);
 101   2          delayms(80000);
 102   2        write_cmd(0x30);
 103   2       }
 104   1      }
 105           void gun_shang()
 106          {
 107   1       uchar i;
 108   1      
 109   1       for (i=1;i<64;i++)
 110   1       { 
 111   2        write_cmd(0x40+i);
 112   2          delayms(3000);
 113   2        write_cmd(0x30);
 114   2       }
 115   1      }

C51 COMPILER V9.60.7.0   12864                                                             04/25/2024 20:19:34 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
